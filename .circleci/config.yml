version: 2.1

orbs:
  ansible: orbss/ansible-playbook@0.0.5

jobs:
  setup-vm:
    docker:
      - image: cimg/python:3.10.0
    steps:
      - checkout
      - ansible/install:
          version: 2.9.6
      - ansible/playbook:
          inventory: ANSIBLE_INVENTORY
          playbook: ci/setup-instance.yaml
          private-key: ANSIBLE_SSH_KEY

  docker-build-and-push:
    working_directory: /dockerapp
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build application Docker image
          command: |
            docker build -t app .
      - deploy:
          name: Publish application to docker hub
          command: |
            docker login -u ${DOCKER_HUB_USER_ID} -p ${DOCKER_HUB_PWD}
            docker tag app ${DOCKER_HUB_USER_ID}/${DOCKER_IMAGE}:$CIRCLE_BUILD_NUM
            docker tag app ${DOCKER_HUB_USER_ID}/${DOCKER_IMAGE}:latest
            docker push ${DOCKER_HUB_USER_ID}/${DOCKER_IMAGE}:$CIRCLE_BUILD_NUM
            docker push ${DOCKER_HUB_USER_ID}/${DOCKER_IMAGE}:latest

  apply-new-image:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - $SSH_KEY_FINGERPRINT
      - run:
          name: Install Docker Compose
          environment:
            COMPOSE_VERSION: '1.29.2'
          command: |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: Setup env file
          command: |
            cd ci
            echo "" > .env
            echo "APP_IMAGE_NAME=${APP_IMAGE_NAME}" >> .env
            echo "GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}" >> .env
            echo "GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}" >> .env
            echo "JWT_SECRET=${JWT_SECRET}" >> .env
            echo "HASURA_GRAPHQL_ADMIN_SECRET=${HASURA_GRAPHQL_ADMIN_SECRET}" >> .env
            echo "APP_DOMAIN=${APP_DOMAIN}" >> .env
            echo "HASURA_DOMAIN=${HASURA_DOMAIN}" >> .env
            echo "LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}" >> .env
            echo "JWT_PUBLIC=${JWT_PUBLIC}" >> .env
      - run:
          name: Apply docker compose
          command: |
            cd ci
            ssh-keyscan -H ${REMOTE_ADDRESS} >> ~/.ssh/known_hosts
            DOCKER_HOST="ssh://${REMOTE_USER}@${REMOTE_ADDRESS}" docker-compose pull
            DOCKER_HOST="ssh://${REMOTE_USER}@${REMOTE_ADDRESS}" docker-compose up -d

  apply-hasura-migrations:
    docker:
      - image: node:latest
    steps:
      - checkout
      - run: yarn add hasura-cli
      - run: |
          cd hasura
          hasura metadata apply
          hasura migrate apply



workflows:
  version: 2
  deploy-configuration:
    jobs:
      - setup-vm
      - docker-build-and-push
      - apply-new-image:
          requires:
            - setup-vm
            - docker-build-and-push
      - apply-hasura-migrations:
          requires:
            - apply-new-image